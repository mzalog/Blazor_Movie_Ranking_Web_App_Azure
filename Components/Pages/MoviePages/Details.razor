@page "/movies/details"
@inject MovieRankingBlazor.Data.ApplicationDbContext DB
@using MovieRankingBlazor.Components
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer

<div class="container mt-4">
    <h1 class="mb-4">Movie Details</h1>

    <div class="card">
        <div class="card-body">
            @if (movie is null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <dl class="row">
                    <dt class="col-sm-3">Title:</dt>
                    <dd class="col-sm-9">@movie.Title</dd>

                    <dt class="col-sm-3">Description:</dt>
                    <dd class="col-sm-9">@movie.Description</dd>

                    <dt class="col-sm-3">Release Date:</dt>
                    <dd class="col-sm-9">@movie.ReleaseDate?.ToString("yyyy-MM-dd")</dd>

                    <dt class="col-sm-3">Rate:</dt>
                    <dd class="col-sm-9">
                        @FormatRate(movie.Rate)
                    </dd>

                    <dt class="col-sm-3">Number of Reviews:</dt>
                    <dd class="col-sm-9">@movie.NumberOfReviews</dd>

                    <dt class="col-sm-3">Image:</dt>
                    <dd class="col-sm-9">
                        @if (!string.IsNullOrEmpty(movie.ImageUrl))
                        {
                            <img src="@movie.ImageUrl" alt="Image of @movie.Title" style="width: 100%; max-width: 300px; border-radius: 8px;" />
                        }
                        else
                        {
                            <p>No image available</p>
                        }
                    </dd>
                </dl>
                <dt class="col-sm-3">Image:</dt>
                @if (movie.ImageData != null && movie.ImageData.Length > 0)
                {
                    <img src="@movie.ImageUrl" alt="Image of @movie.Title" style="max-width: 300px; border-radius: 8px;" />
                }
                else
                {
                    <p>No image from file available</p>
                }

                <div class="rating-form">
                    <EditForm Model="@movie" OnValidSubmit="HandleValidSubmit">
                        <div class="form-group">
                            <label for="newRating" class="form-label">Rate the movie:</label>
                            <InputNumber id="newRating" @bind-Value="newRating" class="form-control rating-input" min="1" max="10" step="0.5" />
                        </div>
                        <button type="submit" class="btn btn-primary submit-button">Submit Rating</button>
                    </EditForm>
                </div>



                <div class="text-end">
                    <a href="@($"/movies/edit?id={movie.Id}")" class="btn btn-primary">Edit</a>
                    <a href="@($"/movies")" class="btn btn-secondary">Back to List</a>
                </div>
            }
        </div>
    </div>
</div>

@code {
    Movie? movie;
    float newRating;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        movie = await DB.Movie.FirstOrDefaultAsync(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task HandleValidSubmit()
    {
        if (movie != null)
        {
            float previousTotalRating = movie.Rate.HasValue ? movie.Rate.Value * movie.NumberOfReviews : 0;
            movie.NumberOfReviews++;
            movie.Rate = (previousTotalRating + newRating) / movie.NumberOfReviews;

            DB.Movie.Update(movie);
            await DB.SaveChangesAsync();
            NavigationManager.NavigateTo($"/movies/details?id={movie.Id}");
        }
    }
    private string FormatRate(float? rate)
    {
        return rate.HasValue ? rate.Value.ToString("F2") : "No rating";
    }
}

<style>
    .rating-input {
        width: 10%;
        margin-bottom: 10px;
    }

    .submit-button {
        width: 15%
    }

    .rating-form {
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 8px;
        margin-bottom: 20px;
    }
</style>