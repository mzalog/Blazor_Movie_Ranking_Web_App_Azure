@page "/movies/delete"
@inject MovieRankingBlazor.Data.ApplicationDbContext DB
@using Microsoft.AspNetCore.Authorization
@using MovieRankingBlazor.Components
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@attribute [Authorize]

<PageTitle>Delete Movie</PageTitle>

<h1>Delete Movie</h1>

<div class="card">
    <div class="card-body">
        <h3>Are you sure you want to delete this movie?</h3>
        <div class="mb-3">
            @if (movie is null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <dl class="row">
                    <dt class="col-sm-3">Title</dt>
                    <dd class="col-sm-9">@movie.Title</dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-3">Release Date</dt>
                    <dd class="col-sm-9">@movie.ReleaseDate?.ToString("yyyy-MM-dd")</dd>
                </dl>
                <dl class="row">
                    <dt class="col-sm-3">Rate</dt>
                    <dd class="col-sm-9">@movie.Rate</dd>
                </dl>
                <div class="mb-3">
                    <EditForm method="post" Model="movie" OnValidSubmit="DeleteMovie" FormName="delete" Enhance>
                        <button type="submit" class="btn btn-danger" disabled="@(movie is null)">Delete</button>
                        <a href="/movies" class="btn btn-secondary">Back to List</a>
                    </EditForm>
                </div>
            }
        </div>
    </div>
</div>

@code {
    Movie? movie;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        movie = await DB.Movie.FirstOrDefaultAsync(m => m.Id == Id);

        if (movie is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteMovie()
    {
        DB.Movie.Remove(movie!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/movies");
    }
}
